<html><head><title>View()</title><link href="styles/default.css" type="text/css" rel="stylesheet"/></head><body><div class="header"> </div><br class="clear"/><div class="navigation"><ul><li><a href="index.htm">Documentation</a></li></ul><ul><li><a class="" href="4294967296-PureMVC.Core.htm">PureMVC.Core</a><ul><li><a class="" href="4294967599.htm">View</a><ul><li><a class="" href="4294967599-Constructors.htm">Constructors</a><ul><li><a class="current" href="4294967600.htm">View</a><ul/></li></ul></li></ul></li></ul></li></ul></div><div class="content"><h1>View() </h1><div class="summary">Constructs and initializes a new view </div><div class="details"><span class="namespace"><em>Namespace:</em> <a href="4294967296-PureMVC.Core.htm">PureMVC.Core</a></span><span class="assembly"><em>Assembly:</em> PureMVC in (PureMVC.dll)
								</span></div>
        <div class="syntax">
            <h2>Syntax</h2>
            <pre><span class="keyword">public</span> View()</pre>
        </div>
    <div class="exceptions"><h2>Exceptions</h2><table><thead><tr><th>Exception</th><th>Condition</th></tr></thead><tbody><tr><td>System.Exception</td><td>Thrown if Singleton instance has already been constructed</td></tr></tbody></table></div><div class="remarks"><h2>Remarks</h2><p>This <span class="code">IView</span> implementation is a Singleton,  so you should not call the constructor  directly, but instead call the static Singleton  Factory method <span class="code">View.getInstance(() =&gt; new View())</span></p></div></div><div class="footer">
			Produced by the <a href="http://theboxsoftware.com/products/live-documenter/">Live Documenter</a> developed by <a href="http://theboxsoftware.com">The Box Software</a>.
		</div></body></html>