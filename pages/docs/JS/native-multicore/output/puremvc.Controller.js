Ext.data.JsonP.puremvc_Controller({"singleton":false,"statics":{"cfg":[],"property":[{"owner":"puremvc.Controller","meta":{"protected":true,"static":true},"name":"instanceMap","id":"static-property-instanceMap","tagname":"property"}],"css_var":[],"event":[],"css_mixin":[],"method":[{"owner":"puremvc.Controller","meta":{"static":true},"name":"removeController","id":"static-method-removeController","tagname":"method"}]},"files":[{"filename":"Controller.js","href":"Controller.html#puremvc-Controller"}],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Controller.html#puremvc-Controller' target='_blank'>Controller.js</a></div></pre><div class='doc-contents'><p>In PureMVC, the Controller class follows the 'Command and Controller'\nstrategy, and assumes these responsibilities:</p>\n\n<ul>\n<li>Remembering which\n<a href=\"#!/api/puremvc.SimpleCommand\" rel=\"puremvc.SimpleCommand\" class=\"docClass\">SimpleCommand</a>s\nor\n<a href=\"#!/api/puremvc.MacroCommand\" rel=\"puremvc.MacroCommand\" class=\"docClass\">MacroCommand</a>s\nare intended to handle which\n<a href=\"#!/api/puremvc.Notification\" rel=\"puremvc.Notification\" class=\"docClass\">Notification</a>s</li>\n<li>Registering itself as an\n<a href=\"#!/api/puremvc.Observer\" rel=\"puremvc.Observer\" class=\"docClass\">Observer</a> with\nthe <a href=\"#!/api/puremvc.View\" rel=\"puremvc.View\" class=\"docClass\">View</a> for each\n<a href=\"#!/api/puremvc.Notification\" rel=\"puremvc.Notification\" class=\"docClass\">Notification</a>\nthat it has an\n<a href=\"#!/api/puremvc.SimpleCommand\" rel=\"puremvc.SimpleCommand\" class=\"docClass\">SimpleCommand</a>\nor <a href=\"#!/api/puremvc.MacroCommand\" rel=\"puremvc.MacroCommand\" class=\"docClass\">MacroCommand</a>\nmapping for.</li>\n<li>Creating a new instance of the proper\n<a href=\"#!/api/puremvc.SimpleCommand\" rel=\"puremvc.SimpleCommand\" class=\"docClass\">SimpleCommand</a>s\nor\n<a href=\"#!/api/puremvc.MacroCommand\" rel=\"puremvc.MacroCommand\" class=\"docClass\">MacroCommand</a>s\nto handle a given\n<a href=\"#!/api/puremvc.Notification\" rel=\"puremvc.Notification\" class=\"docClass\">Notification</a>\nwhen notified by the\n<a href=\"#!/api/puremvc.View\" rel=\"puremvc.View\" class=\"docClass\">View</a>.</li>\n<li>Calling the command's execute method, passing in the\n<a href=\"#!/api/puremvc.Notification\" rel=\"puremvc.Notification\" class=\"docClass\">Notification</a>.</li>\n</ul>\n\n\n<p>Your application must register\n<a href=\"#!/api/puremvc.SimpleCommand\" rel=\"puremvc.SimpleCommand\" class=\"docClass\">SimpleCommand</a>s\nor <a href=\"#!/api/puremvc.MacroCommand\" rel=\"puremvc.MacroCommand\" class=\"docClass\">MacroCommand</a>s\nwith the Controller.</p>\n\n<p>The simplest way is to subclass\n<a href=\"#!/api/puremvc.Facade\" rel=\"puremvc.Facade\" class=\"docClass\">Facade</a>,\nand use its\n<a href=\"#!/api/puremvc.Facade-method-initializeController\" rel=\"puremvc.Facade-method-initializeController\" class=\"docClass\">initializeController</a>\nmethod to add your registrations.</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Properties</h3><div id='property-commandMap' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Controller'>puremvc.Controller</span><br/><a href='source/Controller.html#puremvc-Controller-property-commandMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Controller-property-commandMap' class='name expandable'>commandMap</a><span> : Object</span><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Note name to command constructor mappings ...</div><div class='long'><p>Note name to command constructor mappings</p>\n<p>Defaults to: <code>null</code></p></div></div></div><div id='property-multitonKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Controller'>puremvc.Controller</span><br/><a href='source/Controller.html#puremvc-Controller-property-multitonKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Controller-property-multitonKey' class='name expandable'>multitonKey</a><span> : string</span><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>The Controller's multiton key ...</div><div class='long'><p>The Controller's multiton key</p>\n<p>Defaults to: <code>null</code></p></div></div></div><div id='property-view' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Controller'>puremvc.Controller</span><br/><a href='source/Controller.html#puremvc-Controller-property-view' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Controller-property-view' class='name expandable'>view</a><span> : <a href=\"#!/api/puremvc.View\" rel=\"puremvc.View\" class=\"docClass\">puremvc.View</a></span><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Local reference to the Controller's View ...</div><div class='long'><p>Local reference to the Controller's View</p>\n<p>Defaults to: <code>null</code></p></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Properties</h3><div id='static-property-instanceMap' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Controller'>puremvc.Controller</span><br/><a href='source/Controller.html#puremvc-Controller-static-property-instanceMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Controller-static-property-instanceMap' class='name expandable'>instanceMap</a><span> : Object</span><strong class='protected signature'>protected</strong><strong class='static signature'>static</strong></div><div class='description'><div class='short'>Multiton key to Controller instance mappings ...</div><div class='long'><p>Multiton key to Controller instance mappings</p>\n<p>Defaults to: <code>[]</code></p></div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Controller'>puremvc.Controller</span><br/><a href='source/Controller.html#puremvc-Controller-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/puremvc.Controller-method-constructor' class='name expandable'>puremvc.Controller</a>( <span class='pre'>string key</span> ) : Object</div><div class='description'><div class='short'>This Controller implementation is a Multiton, so you should not call the\nconstructor directly, but instead call the s...</div><div class='long'><p>This Controller implementation is a Multiton, so you should not call the\nconstructor directly, but instead call the static <a href=\"#!/api/puremvc.Controller-method-getInstance\" rel=\"puremvc.Controller-method-getInstance\" class=\"docClass\">getInstance</a> factory method,\npassing the unique key for this instance to it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : string<div class='sub-desc'><p>@throws {Error}\n If instance for this Multiton key has already been constructed</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-executeCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Controller'>puremvc.Controller</span><br/><a href='source/Controller.html#puremvc-Controller-method-executeCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Controller-method-executeCommand' class='name expandable'>executeCommand</a>( <span class='pre'><a href=\"#!/api/puremvc.Notification\" rel=\"puremvc.Notification\" class=\"docClass\">puremvc.Notification</a> note</span> ) : void</div><div class='description'><div class='short'>If a SimpleCommand or MacroCommand has previously been registered to handle\nthe given Notification then it is executed. ...</div><div class='long'><p>If a SimpleCommand or MacroCommand has previously been registered to handle\nthe given Notification then it is executed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>note</span> : <a href=\"#!/api/puremvc.Notification\" rel=\"puremvc.Notification\" class=\"docClass\">puremvc.Notification</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Controller'>puremvc.Controller</span><br/><a href='source/Controller.html#puremvc-Controller-method-getInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Controller-method-getInstance' class='name expandable'>getInstance</a>( <span class='pre'>string key</span> ) : <a href=\"#!/api/puremvc.Controller\" rel=\"puremvc.Controller\" class=\"docClass\">puremvc.Controller</a></div><div class='description'><div class='short'>The Controllers multiton factory method. ...</div><div class='long'><p>The Controllers multiton factory method.\nNote that this method will return null if supplied a null\nor undefined multiton key.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : string<div class='sub-desc'><p>A Controller's multiton key</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/puremvc.Controller\" rel=\"puremvc.Controller\" class=\"docClass\">puremvc.Controller</a></span><div class='sub-desc'><p>the Multiton instance of Controller</p>\n</div></li></ul></div></div></div><div id='method-hasCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Controller'>puremvc.Controller</span><br/><a href='source/Controller.html#puremvc-Controller-method-hasCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Controller-method-hasCommand' class='name expandable'>hasCommand</a>( <span class='pre'>string notificationName</span> ) : boolean</div><div class='description'><div class='short'>Check if a command is registered for a given Notification ...</div><div class='long'><p>Check if a command is registered for a given Notification</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>notificationName</span> : string<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p>whether a Command is currently registered for the given notificationName.</p>\n</div></li></ul></div></div></div><div id='method-initializeController' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Controller'>puremvc.Controller</span><br/><a href='source/Controller.html#puremvc-Controller-method-initializeController' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Controller-method-initializeController' class='name expandable'>initializeController</a>( <span class='pre'></span> ) : void<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Initialize the multiton Controller instance. ...</div><div class='long'><p>Initialize the multiton Controller instance.</p>\n\n<p>Called automatically by the constructor.</p>\n\n<p>Note that if you are using a subclass of View\nin your application, you should <em>also</em> subclass Controller\nand override the initializeController method in the\nfollowing way.</p>\n\n<pre><code>MyController.prototype.initializeController= function ()\n{\n    this.view= MyView.getInstance(this.multitonKey);\n};\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-registerCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Controller'>puremvc.Controller</span><br/><a href='source/Controller.html#puremvc-Controller-method-registerCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Controller-method-registerCommand' class='name expandable'>registerCommand</a>( <span class='pre'>string notificationName, Function commandClassRef</span> ) : void</div><div class='description'><div class='short'>Register a particular SimpleCommand or MacroCommand class as the handler for\na particular Notification. ...</div><div class='long'><p>Register a particular SimpleCommand or MacroCommand class as the handler for\na particular Notification.</p>\n\n<p>If an command already been registered to handle Notifications with this name,\nit is no longer used, the new command is used instead.</p>\n\n<p>The Observer for the new command is only created if this the irst time a\ncommand has been regisered for this Notification name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>notificationName</span> : string<div class='sub-desc'><p>the name of the Notification</p>\n</div></li><li><span class='pre'>commandClassRef</span> : Function<div class='sub-desc'><p>a command constructor</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-removeCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Controller'>puremvc.Controller</span><br/><a href='source/Controller.html#puremvc-Controller-method-removeCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Controller-method-removeCommand' class='name expandable'>removeCommand</a>( <span class='pre'>string notificationName</span> ) : void</div><div class='description'><div class='short'>Remove a previously registered command to\nNotification\nmapping. ...</div><div class='long'><p>Remove a previously registered command to\n<a href=\"#!/api/puremvc.Notification\" rel=\"puremvc.Notification\" class=\"docClass\">Notification</a>\nmapping.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>notificationName</span> : string<div class='sub-desc'><p>the name of the Notification to remove the command mapping for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='static-method-removeController' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='puremvc.Controller'>puremvc.Controller</span><br/><a href='source/Controller.html#puremvc-Controller-static-method-removeController' target='_blank' class='view-source'>view source</a></div><a href='#!/api/puremvc.Controller-static-method-removeController' class='name expandable'>removeController</a>( <span class='pre'>string key</span> ) : void<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Remove a Controller instance. ...</div><div class='long'><p>Remove a Controller instance.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : string<div class='sub-desc'><p>multitonKey of Controller instance to remove</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","component":false,"uses":[],"code_type":"function","inheritdoc":null,"superclasses":[],"mixedInto":[],"mixins":[],"members":{"property":[{"owner":"puremvc.Controller","meta":{"protected":true},"name":"commandMap","id":"property-commandMap","tagname":"property"},{"owner":"puremvc.Controller","meta":{"protected":true},"name":"multitonKey","id":"property-multitonKey","tagname":"property"},{"owner":"puremvc.Controller","meta":{"protected":true},"name":"view","id":"property-view","tagname":"property"}],"cfg":[],"css_var":[],"css_mixin":[],"event":[],"method":[{"owner":"puremvc.Controller","meta":{},"name":"constructor","id":"method-constructor","tagname":"method"},{"owner":"puremvc.Controller","meta":{},"name":"executeCommand","id":"method-executeCommand","tagname":"method"},{"owner":"puremvc.Controller","meta":{},"name":"getInstance","id":"method-getInstance","tagname":"method"},{"owner":"puremvc.Controller","meta":{},"name":"hasCommand","id":"method-hasCommand","tagname":"method"},{"owner":"puremvc.Controller","meta":{"protected":true},"name":"initializeController","id":"method-initializeController","tagname":"method"},{"owner":"puremvc.Controller","meta":{},"name":"registerCommand","id":"method-registerCommand","tagname":"method"},{"owner":"puremvc.Controller","meta":{},"name":"removeCommand","id":"method-removeCommand","tagname":"method"}]},"allMixins":[],"meta":{"author":["PureMVC JS Native Port by David Foley, Frédéric Saunier, & Alain Duchesneau","Copyright(c) 2006-2012 Futurescale, Inc., Some rights reserved."]},"private":false,"name":"puremvc.Controller","alternateClassNames":[],"aliases":{},"html_meta":{"author":null},"tagname":"class","extends":null,"requires":[],"id":"class-puremvc.Controller","subclasses":[],"inheritable":false});